@model SalesPerformanceRankingViewModel
@inject PReMaSys.Data.ApplicationDbContext _context

@{
    ViewData["Title"] = "Sales Performance";
    Layout = "~/Views/Shared/_LayoutLoggedin.cshtml";
}

<link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-9ndCyUaIbzAi2FUVXJi0CjmCapSmO7SnpJef0486qhLnuZ2cdeRhO02iuK6FUUVM" crossorigin="anonymous">

<div class="back-button" style="margin-bottom:20px">
    <a class="notificationback-link btn btn-outline-success p-2 mt-5" asp-action="ReportsPage" asp-controller="Admin" type="button">Back</a>
    <a class="notificationback-link btn btn-outline-success p-2 mt-5" onClick="window.print()" style="width:20%">Print/Save File</a>
</div>

<div class="text-center mb-5 mt-5">
   <h2>Top Three Performances</h2>
   <p style="color:grey">Current Time and Date: <span id="date-time"></span>.</p>
</div>



<div class="container" style="margin-top:30px; display:flex; justify-content:center" id="row">
  <div class="row">
    @foreach (var (index, performance) in Model.TopThreePerformances.Select((value, i) => (i + 1, value)))
    {
      <div class="col-lg-4 col-md-6 col-sm-12">
        <div class="card ranking-card text-bg-light mb-3 mx-auto">
                @{
                    var salesName = _context.SERecord.FirstOrDefault(s => s.EmployeeNo == performance.SalesPerson)?.EmployeeFirstname;
                    var salesLName = _context.SERecord.FirstOrDefault(s => s.EmployeeNo == performance.SalesPerson)?.EmployeeLastname;

                    var userWithImage = _context.SERecord.FirstOrDefault(u => u.EmployeeNo == performance.SalesPerson);
                    if (userWithImage != null && userWithImage.SERId != null)
                    {
                        var userIdString = userWithImage.SERId.ToString();
                        var user = _context.Users.FirstOrDefault(u => u.Id == userIdString);

                        if (user != null && user.Pic != null)
                        {
                                    <img src="data:image/jpeg;base64,@(Convert.ToBase64String(user.Pic))" alt="User Image" class="img-fluid card-img-top" style="width:100%; height:280px;">
                        }
                        else
                        {
                                    <img src="~/img/boy.png" alt="Default Image" class="img-fluid card-img-top" style="width:100%; height:280px">
                        }
                    }
                    else
                    {
                                     <img src="~/img/boy.png" alt="Default Image" class="img-fluid card-img-top" style="width:100%; height:280px;">
                    }
                }
                <div class="card-body text-center mt-3 mb-3">
                    @salesName &nbsp; @salesLName
                    <br>
                    Rank @index
                    
                </div>
                    <button type="button" class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#staticBackdrop">
                        Launch static backdrop modal
                    </button>
                <table class="table">
                    <thead>
                        <tr>
                            <th>Units Sold</th>
                            <th>Sales Revenue</th>
                            <th>Sales Profit</th>


                        </tr>
                    </thead>
                    <tbody>
                        <tr>
                            <td>@string.Format("{0:#,##0}", @performance.UnitsSold)</td>
                            <td>&#8369; @string.Format("{0:#,##0}", performance.SalesRevenue)</td>
                            <td>&#8369; @string.Format("{0:#,##0}", performance.SalesProfit)</td>
                        </tr>
                    </tbody>
                </table>
                    <!-- Modal -->
                    <div class="modal fade" id="staticBackdrop_@index" data-bs-backdrop="static" data-bs-keyboard="false" tabindex="-1" aria-labelledby="staticBackdropLabel" aria-hidden="true">
                        <div class="modal-dialog">
                            <div class="modal-content">
                                <div class="modal-header">
                                    <h1 class="modal-title fs-5" id="staticBackdropLabel">Employe of the:</h1>
                                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                                </div>
                                <div class="modal-body">
                                    @{
                                        var salesPerson = performance.SalesPerson;
                                        var employeeOfThe = _context.EmployeeofThes.FirstOrDefault(e => e.SalesPerson == salesPerson);
                                        if (employeeOfThe != null)
                                        {
                                            <p>Employee of the Month: @employeeOfThe.EmployeeOfTheMonth</p>
                                            <p>Employee of the Year: @employeeOfThe.EmployeeOfTheYear</p>
                                            <p>Date Modified: @employeeOfThe.DateModified</p>
                                        }
                                    }
                                </div>
                                <div class="modal-footer">
                                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                                </div>
                            </div>
                        </div>
                    </div>
          </div>
          </div>
     
    }
       </div>
</div>

<h2 class="text-center mt-5 mb-5">Remaining Performances</h2>

<div class="table-repsonsive">
    <table class="table table-hover">
    <thead>
        <tr>
            <th>Rank</th>
            <th>Sales Person</th>
            <th>Units Sold</th>
            <th>Sales Revenue</th>
            <th>Sales Profit</th>
        </tr>
    </thead>
    <tbody>
            @foreach (var (index, performance) in Model.RemainingPerformances.Select((value, i) => (i + 4, value)))
            {
                var salesName = _context.SERecord.FirstOrDefault(s => s.EmployeeNo == performance.SalesPerson)?.EmployeeFirstname;
                var salesLName = _context.SERecord.FirstOrDefault(s => s.EmployeeNo == performance.SalesPerson)?.EmployeeLastname;
                <tr>
                    <td>@index</td>
                    <td>@salesName @salesLName</td>
                    <td>@string.Format("{0:#,##0}", @performance.UnitsSold)</td>
                    <td>&#8369; @string.Format("{0:#,##0}", @performance.SalesRevenue)</td>
                    <td>&#8369; @string.Format("{0:#,##0}", @performance.SalesProfit)</td>
                    <td>
                        <button type="button" class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#staticBackdrop">
                            Launch static backdrop modal
                        </button>
                    </td>
                </tr>
            }
    </tbody>
</table>
</div>



<script>
    var dt = new Date();
    document.getElementById('date-time').innerHTML=dt;
</script>