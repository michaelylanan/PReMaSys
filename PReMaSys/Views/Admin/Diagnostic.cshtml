@inject PReMaSys.Data.ApplicationDbContext _context;


@{
    ViewData["Title"] = "Diagnostic Analysis";
    Layout = "~/Views/Shared/_LayoutLoggedin.cshtml";

    var getProfit = ViewBag.User as List<SalesPerformance>;
}

<style>
    * {
        margin: 0;
        padding: 0;
        font-family: sans-serif;
    }

    .chartMenu {
        width: auto;
        height: auto;
        padding: 20px;
        background: #69cc00;
        text-align: center;
        color: white;
    }

        .chartMenu p {
            padding: 10px;
            font-size: 30px;
        }

    .chartCard {
        width: auto;
        height: auto;
        padding: 10px;
        background: #e6ffcc;
        display: flex;
        align-items: center;
        justify-content: center;
        margin-bottom: 30px;
    }

    .chartBox {
        width: 600px;
        padding: 20px;
        border-radius: 20px;
        border: solid 3px #4f9900;
        background: white;
    }

    .chartBox2 {
        width: auto;
        padding: 20px;
        border-radius: 20px;
        border: solid 3px #4f9900;
        background: white;
    }

    .chartjs-table, th, td {
        border-collapse: collapse;
        border: 1px solid green;
        padding: 10px;
    }

    .chartjs-thead {
        font-weight: bold;
    }

    .chartjs-tbody {
        text-align: center;
    }

    .chartBox3 {
        width: auto;
        padding: 20px;
        border-radius: 20px;
        border: solid 3px #4f9900;
        background: white;
    }

    .grid-container {
        display: grid;
        grid-template-columns: auto auto;
        padding: 10px;
    }

    .grid-item {
        padding: 20px;
        font-size: 30px;
    }

    .item1 {
        grid-area: header;
    }

    .item2 {
        grid-area: menu;
    }

    .item3 {
        grid-area: main;
    }

    .item4 {
        grid-area: right;
    }

    .item5 {
        grid-area: footer;
    }

    .grid-container2 {
        display: grid;
        grid-template-areas:
            'menu main main main main main  main '
            'menu footer footer footer footer footer footer';
        gap: 5px;
        padding: 5px;
    }

        .grid-container2 > div {
            text-align: center;
            padding: 5px;
            font-size: 16px;
        }

</style>

<script type="text/javascript" src="https://cdn.jsdelivr.net/npm/chart.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/chartjs-plugin-datalabels/2.1.0/chartjs-plugin-datalabels.min.js" integrity="sha512-Tfw6etYMUhL4RTki37niav99C6OHwMDB2iBT5S5piyHO+ltK2YX8Hjy9TXxhE1Gm/TmAV0uaykSpnHKFIAif/A==" crossorigin="anonymous" referrerpolicy="no-referrer"></script>
<script type="text/javascript" src="https://unpkg.com/chart.js-plugin-labels-dv/dist/chartjs-plugin-labels.min.js"></script>

<div class="back-button" style="margin-bottom:20px">
    <a class="notificationback-link btn btn-outline-success p-2 mt-5" href="ReportsPage" type="button">Back</a>
    <a class="notificationback-link btn btn-outline-success p-2 mt-5" onClick="window.print()" style="width:20%">Print/Save File</a>
</div>

<div class="chartMenu">
    <p>SUMMARY OF NET PROFIT & GROSS SALES: DIAGNOSTIC ANALYSIS</p>
</div>
<div class="grid-container">
    <div class="grid-item">
        <div>
            <div>
                <table style="font-size:15px;">
                    <tr>
                        <th colspan="2" style="text-align:center">Key Objectives</th>
                    </tr>
                    <tr>
                        <td><img src="~/img/health.png" height="50px" /></td>
                        <td>Perform Health Checks of the Profit Generated by Sales Employee</td>
                    </tr>
                    <tr>
                        <td><img src="~/img/assess.png" height="50px" /></td>
                        <td>Assess the sales performance of employees</td>
                    </tr>
                    <tr>
                        <td><img src="~/img/homepicbgr.png" height="50px" /></td>
                        <td>Realize the strengths of the organization and focus on weakness</td>
                    </tr>
                </table>
            </div>
        </div>
    </div>
    <div class="grid-item">
        <div>
            <div>
                <table style="font-size:15px">
                    <tr>
                        <th colspan="2" style="text-align:center">Key Areas to Improve</th>
                    </tr>
                    <tr>
                        <td><img height="50px" src="https://www.kindpng.com/picc/m/74-743103_listening-to-customers-png-happy-customer-png-transparent.png" alt="Listening To Customers Png - Happy Customer Png," /></td>
                        <td>Increase the number of customers.</td>
                    </tr>
                    <tr>
                        <td><img height="50px" src="https://www.kindpng.com/picc/m/592-5921325_icone-exprience-client-png-download-gif-image-of.png" alt="Icone Expérience Client , Png Download - Gif Image Of Transaction," /></td>
                        <td>Increase the average transaction size by offering other products to clients.</td>
                    </tr>
                    <tr>
                        <td><img height="50px" src="https://www.kindpng.com/picc/m/723-7236770_follow-up-and-processing-follow-up-icon-hd.png" alt="Follow-up And Processing - Follow Up Icon, HD Png Download@kindpng.com"></td>
                        <td>Increase the frequency of transactions per client by having follow ups</td>
                    </tr>
                    <tr>
                        <td><img height="50px" src="https://www.kindpng.com/picc/m/82-825162_supplier-icon-png-transparent-png.png" alt="Supplier Icon Png, Transparent Png@kindpng.com"></td>
                        <td>Look for low-cost suppliers</td>
                    </tr>
                </table>
            </div>
        </div>
    </div>
</div>

@{
    DateTime currentDate = DateTime.Now;

    DateTime lastMonth = currentDate.AddMonths(-1);
    DateTime currentMonth = currentDate;

    DateTime lastYear = currentDate.AddYears(-1);
    DateTime currentYear = currentDate;

    var lastMonthSales = getProfit
        .Where(s => s.DateAdded >= lastMonth && s.DateAdded < currentMonth)
        .ToList();
    var currentMonthSales = getProfit
        .Where(s => s.DateAdded >= new DateTime(currentMonth.Year, currentMonth.Month, 1) && s.DateAdded <= currentDate)
        .ToList();

    var lastYearSales = getProfit
        .Where(s => s.DateAdded >= lastYear && s.DateAdded < currentYear)
        .ToList();
    var currentYearSales = getProfit    
        .Where(s => s.DateAdded >= new DateTime(currentYear.Year, 1, 1) && s.DateAdded <= currentDate)
        .ToList();
}


<div class="chartCard">
    <div class="grid-container2">
        <div class="item2">
            <div class="chartBox">
                <div>Pie Chart: NET PROFIT GENERATED</div>
                <canvas id="salesProfitChart"></canvas>
                <br />
                <br />

                <table class="table">
                    <thead>
                        <tr>
                            <th>Time Line</th>
                            <th>Sales Profit</th>
                        </tr>
                    </thead>
                    <tbody style="text-align:left">
                        <tr>
                            <td>Last Month Sales Profit:</td>
                            <td>&#8369; @string.Format("{0:#,##0}", @lastMonthSales.Sum(s => s.SalesProfit))</td>

                        </tr>
                        <tr>
                            <td>Current Month Sales Profit:</td>
                            <td>&#8369; @string.Format("{0:#,##0}", @currentMonthSales.Sum(s => s.SalesProfit))</td>
                        </tr>
                        <tr>
                            <td>Last Year Sales Profit:</td>
                            <td>&#8369; @string.Format("{0:#,##0}", lastYearSales.Sum(s => s.SalesProfit))</td>
                        </tr>
                        <tr>
                            <td>Current Year Sales Profit:</td>
                            <td>&#8369; @string.Format("{0:#,##0}", currentYearSales.Sum(s => s.SalesProfit))</td>
                        </tr>
                    </tbody>
                </table>
            </div>
        </div>
        <div class="item3">
            <div class="chartBox">
                <div>Polar Chart: GROSS SALES</div>
                <canvas id="salesProfitPolarChart"></canvas>
                <br />
                <br />

                <table class="table">
                    <thead>
                        <tr>
                            <th>Time Line</th>
                            <th>Sales Revenue</th>
                        </tr>
                    </thead>
                    <tbody style="text-align:left">
                        <tr>
                            <td>Last Month Sales Revenue:</td>
                            <td>&#8369; @string.Format("{0:#,##0}", @lastMonthSales.Sum(s => s.SalesRevenue))</td>

                        </tr>
                        <tr>
                            <td>Current Month Sales Revenue:</td>
                            <td>&#8369; @string.Format("{0:#,##0}", @currentMonthSales.Sum(s => s.SalesRevenue))</td>
                        </tr>
                        <tr>
                            <td>Last Year Sales Revenue:</td>
                            <td>&#8369; @string.Format("{0:#,##0}", lastYearSales.Sum(s => s.SalesRevenue))</td>
                        </tr>
                        <tr>
                            <td>Current Year Sales Revenue:</td>
                            <td>&#8369; @string.Format("{0:#,##0}", currentYearSales.Sum(s => s.SalesRevenue))</td>
                        </tr>
                    </tbody>
                </table>
            </div>
        </div>
    </div>
</div>

<div>
    <script>
        var salesProfitData = {
            labels: ["Last Month", "Current Month", "Last Year", "Current Year"],
            datasets: [{
                data: [
                    @lastMonthSales.Sum(s => s.SalesProfit),
                    @currentMonthSales.Sum(s => s.SalesProfit),
                    @lastYearSales.Sum(s => s.SalesProfit),
                    @currentYearSales.Sum(s => s.SalesProfit)
                        ],
                backgroundColor: [
                    'rgba(255, 99, 132, 0.8)',
                    'rgba(54, 162, 235, 0.8)',
                    'rgba(255, 206, 86, 0.8)',
                    'rgba(75, 192, 192, 0.8)'
                ]
            }]
        };

        var salesProfitChart = new Chart(document.getElementById('salesProfitChart'), {
            type: 'pie',
            data: salesProfitData
        });
    </script>
</div>

<div>
    <script>
        var salesProfitPolarData = {
            labels: ["Last Month", "Current Month", "Last Year", "Current Year"],
            datasets: [{
                data: [
                    @lastMonthSales.Sum(s => s.SalesProfit),
                    @currentMonthSales.Sum(s => s.SalesProfit),
                    @lastYearSales.Sum(s => s.SalesProfit),
                    @currentYearSales.Sum(s => s.SalesProfit)
                        ],
                backgroundColor: [
                    'rgba(255, 99, 132, 0.8)',
                    'rgba(54, 162, 235, 0.8)',
                    'rgba(255, 206, 86, 0.8)',
                    'rgba(75, 192, 192, 0.8)'
                ]
            }]
        };

        var salesProfitPolarChart = new Chart(document.getElementById('salesProfitPolarChart'), {
            type: 'polarArea',
            data: salesProfitPolarData
        });
    </script>
</div>

<script>
    function printFunction() {
        window.print();
    }
</script>
