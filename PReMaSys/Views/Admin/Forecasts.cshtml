@{
    ViewData["Title"] = "Forecasts";
    Layout = "~/Views/Shared/_LayoutLoggedin.cshtml";
}

<script type="text/javascript" src="https://cdn.jsdelivr.net/npm/chart.js"></script>
<script src="https://cdn.jsdelivr.net/npm/chartjs-adapter-date-fns/dist/chartjs-adapter-date-fns.bundle.min.js"></script>

<!--Bootstrap-->
<script src="https://code.jquery.com/jquery-3.2.1.slim.min.js" integrity="sha384-KJ3o2DKtIkvYIK3UENzmM7KCkRr/rE9/Qpg6aAZGJwFDMVNA/GpGFF93hXpG5KkN" crossorigin="anonymous"></script>
<script src="https://cdn.jsdelivr.net/npm/popper.js@1.12.9/dist/umd/popper.min.js" integrity="sha384-ApNbgh9B+Y1QKtv3Rn7W3mgPxhU9K/ScQsAP7hUibX39j7fakFPskvXusvfa0b4Q" crossorigin="anonymous"></script>
<script src="https://cdn.jsdelivr.net/npm/bootstrap@4.0.0/dist/js/bootstrap.min.js" integrity="sha384-JZR6Spejh4U02d8jOt6vLEHfe/JQGiRRSQQxSfFWpi1MquVdAyjUar5+76PVCmYl" crossorigin="anonymous"></script>

<!-- For CSV To ChartJS -->
<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@4.0.0/dist/css/bootstrap.min.css" integrity="sha384-Gn5384xqQ1aoWXA+058RXPxPg6fy4IWvTNh0E263XmFcJlSAwiGgFAW/dAiS6JXm" crossorigin="anonymous">
<script src="https://code.jquery.com/jquery-3.2.1.slim.min.js" integrity="sha384-KJ3o2DKtIkvYIK3UENzmM7KCkRr/rE9/Qpg6aAZGJwFDMVNA/GpGFF93hXpG5KkN" crossorigin="anonymous"></script>
<script src="https://cdn.jsdelivr.net/npm/bootstrap@4.0.0/dist/js/bootstrap.min.js" integrity="sha384-JZR6Spejh4U02d8jOt6vLEHfe/JQGiRRSQQxSfFWpi1MquVdAyjUar5+76PVCmYl" crossorigin="anonymous"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/Chart.js/2.9.4/Chart.js"></script>

<script type="text/javascript" src="https://cdn.jsdelivr.net/npm/chart.js"></script>

<style>
    * {
        margin: 0;
        padding: 0;
        font-family: sans-serif;
    }

    .chartMenu {
        width: auto;
        height: auto;
        background: #69cc00;
        text-align: center;
        color: white;
    }

        .chartMenu p {
            padding: 10px;
            font-size: 80px;
        }

    .chartCard {
        width: auto;
        height: auto;
        padding: 20px;
        background: #e6ffcc;
        display: flex;
        align-items: center;
        justify-content: center;
    }

    .chartBox {
        width: 1000px;
        padding: 20px;
        border-radius: 20px;
        border: solid 3px #4f9900;
        background: white;
    }

    .chartBox2 {
        width: auto;
        padding: 20px;
        border-radius: 20px;
        border: solid 3px #4f9900;
        background: white;
    }

    .chartjs-table, th, td {
        border-collapse: collapse;
        border: 1px solid green;
        padding: 10px;
    }

    .chartjs-thead {
        font-weight: bold;
    }

    .chartjs-tbody {
        text-align: center;
    }

</style>

<div class="back-button" style="margin-bottom:20px">
    <a class="notificationback-link btn btn-outline-success p-2 mt-5" asp-action="ReportsPage" asp-controller="Admin" type="button">Back</a>
    <a class="notificationback-link btn btn-outline-success p-2 mt-5" onClick="window.print()" style="width:20%">Print/Save File</a>
</div>

<div class="chartMenu">
    <p>PROFIT FORECAST</p>
</div>

<!-- INPUT DB SHEET LINK-->
<div class="container" style="padding:40px">
    <div class="card">
        <div class="card-header"><b>Input SHEETDB API URL (CSV FILE)</b></div>
        <div style="padding:10px">Create new Google Spreadsheet using this template: <a class="card-link" href="https://docs.google.com/spreadsheets/d/1G9CHymBln0ZJO38Tp3esblUh4XXRUTy71_EgqDRnqAs/edit#gid=0" target="_blank">Forecast Template</a></div>
        <div style="padding:10px">Logged in to Convert Google Spreadsheet link to SheetDB API (CSV): <a class="card-link" href="https://sheetdb.io/apis" target="_blank">SheetDB API</a></div>
        <div class="card-body" style="margin: 0 auto;margin-left: auto;margin-right: auto;">
            <input type="text" placeholder="Paste SheetDB API Url Here..." id="myInput" size="50">
            <button class="btn btn-outline-success" onclick="plotcharts()">Plot Charts</button>
        </div>
    </div>
</div>


<div class="chartCard">
    <div class="chartBox">
        <div>PROFIT FORECAST: WEEKLY</div>
        <canvas id="linechart" style="margin-bottom:40px"></canvas>
    </div>

</div>
<div class="chartCard">
    <div class="chartBox">
        <div>PROFIT FORECAST: MONTHLY</div>
        <canvas id="linechart2" style="margin-bottom:40px"></canvas>
    </div>
</div>
<div class="chartCard">
    <div class="chartBox">
        <div>PROFIT FORECAST: QUARTERLY</div>
        <canvas id="linechart3" style="margin-bottom:40px"></canvas>
    </div>
</div>
<div class="chartCard">
    <div class="chartBox">
        <div>PROFIT FORECAST: YEARLY</div>
        <canvas id="linechart4" style="margin-bottom:40px"></canvas>
    </div>
</div>

<script type="text/javascript">
    function plotcharts() {
        var inputVal = document.getElementById("myInput").value;
        var apiUrl = inputVal;
        var dateW = []
        var profitW = [];
        var dateM = []
        var profitM = [];
        var dateQ = [];
        var profitQ = [];
        var dateY = [];
        var profitY = [];

        var bgcolor = [
            'rgb(79, 153, 0)',
            'rgba(54, 162, 235, 0.2)',
            'rgba(255, 206, 86, 0.2)',
            'rgba(75, 192, 192, 0.2)',
            'rgba(153, 102, 255, 0.2)',
            'rgba(255, 159, 64, 0.2)',
            'rgba(0, 0, 0, 0.2)'
        ];

        var bordercolor = [
            'rgb(53, 102, 0)', // line color
            'rgba(54, 162, 235, 1)',
            'rgba(255, 206, 86, 1)',
            'rgba(75, 192, 192, 1)',
            'rgba(153, 102, 255, 1)',
            'rgba(255, 159, 64, 1)',
            'rgba(0, 0, 0, 1)'
        ];



        fetch(apiUrl).then(response => {
            return response.json();
        }).then(data => {
            for (let i = 0; i < data.length; i++) {
                dateW.push(data[i]['Weekly']);
                profitW.push(parseInt(data[i]['Weekly Profit']));
                dateM.push(data[i]['Monthly']);
                profitM.push(data[i]['Monthly Profit']);
                dateQ.push(data[i]['Quarterly']);
                profitQ.push(parseInt(data[i]['Quarterly Profit']));
                dateY.push(data[i]['Yearly']);
                profitY.push(parseInt(data[i]['Yearly Profit']));
            }

            //For Line chart
            dataset = addData('Weekly Profit', profitW, bgcolor, bordercolor)
            drawchart(dataset, dateW, 'line');

            dataset = addData('Monthly Profit', profitM, bgcolor, bordercolor)
            drawchart2(dataset, dateM, 'line');

            dataset = addData('Quarterly Profit', profitQ, bgcolor, bordercolor)
            drawchart3(dataset, dateQ, 'line');

            dataset = addData('Yearly Profit', profitY, bgcolor, bordercolor)
            drawchart4(dataset, dateY, 'line');

        }).catch(err => {
            console.log(err);
        });

    }
    function addData(title, Data, bgcolor, bordercolor) {
        return [{
            label: title,
            data: Data,
            backgroundColor: bgcolor,
            borderColor: bordercolor,
            borderWidth: 2,

        }];
    }

    function drawchart(dataset, Labels, type) {
        const ctx = document.getElementById(type + 'chart').getContext('2d');
        const myChart = new Chart(ctx, {
            type: type,
            data: {
                labels: Labels,
                datasets: dataset,
            },
            options: {
                scales: {
                    y: {
                        beginAtZero: true
                    }
                }
            }
        });
    }
    function drawchart2(dataset, Labels, type) {
        const ctx = document.getElementById(type + 'chart2').getContext('2d');
        const myChart = new Chart(ctx, {
            type: type,
            data: {
                labels: Labels,
                datasets: dataset
            },
            options: {
                scales: {
                    y: {
                        beginAtZero: true
                    }
                }
            }
        });
    }
    function drawchart3(dataset, Labels, type) {
        const ctx = document.getElementById(type + 'chart3').getContext('2d');
        const myChart = new Chart(ctx, {
            type: type,
            data: {
                labels: Labels,
                datasets: dataset
            },
            options: {
                scales: {
                    y: {
                        beginAtZero: true
                    }
                }
            }
        });
    }
    function drawchart4(dataset, Labels, type) {
        const ctx = document.getElementById(type + 'chart4').getContext('2d');
        const myChart = new Chart(ctx, {
            type: type,
            data: {
                labels: Labels,
                datasets: dataset
            },
            options: {
                scales: {
                    y: {
                        beginAtZero: true
                    }
                }
            }
        });
    }
</script>

<script>
    function printFunction() {
        window.print();
    }
</script>
