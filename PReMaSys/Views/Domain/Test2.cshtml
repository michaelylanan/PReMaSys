@{
    ViewData["Title"] = "Diagnostic Analysis";
    Layout = "~/Views/Shared/_LayoutLoggedin.cshtml";
}


<style>
    * {
        margin: 0;
        padding: 0;
        font-family: sans-serif;
    }

    .chartMenu {
        width: auto;
        height: auto;
        padding: 20px;
        background: #69cc00;
        text-align: center;
        color: white;
    }

        .chartMenu p {
            padding: 10px;
            font-size: 30px;
        }

    .chartCard {
        width: auto;
        height: auto;
        padding: 20px;
        background: #e6ffcc;
        display: flex;
        align-items: center;
        justify-content: center;
    }

    .chartBox {
        width: 1000px;
        padding: 20px;
        border-radius: 20px;
        border: solid 3px #4f9900;
        background: white;
    }

    .chartBox2 {
        width: 1000px;
        padding: 20px;
        border-radius: 20px;
        border: solid 3px #4f9900;
        background: white;
    }

    .chartjs-table, th, td {
        border-collapse: collapse;
        border: 1px solid green;
        padding: 10px;
    }

    .chartjs-thead {
        font-weight: bold;
    }

    .chartjs-tbody {
        text-align: center;
    }

</style>

<!-- For CSV To ChartJS -->
<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@4.0.0/dist/css/bootstrap.min.css" integrity="sha384-Gn5384xqQ1aoWXA+058RXPxPg6fy4IWvTNh0E263XmFcJlSAwiGgFAW/dAiS6JXm" crossorigin="anonymous">
<script src="https://code.jquery.com/jquery-3.2.1.slim.min.js" integrity="sha384-KJ3o2DKtIkvYIK3UENzmM7KCkRr/rE9/Qpg6aAZGJwFDMVNA/GpGFF93hXpG5KkN" crossorigin="anonymous"></script>
<script src="https://cdn.jsdelivr.net/npm/bootstrap@4.0.0/dist/js/bootstrap.min.js" integrity="sha384-JZR6Spejh4U02d8jOt6vLEHfe/JQGiRRSQQxSfFWpi1MquVdAyjUar5+76PVCmYl" crossorigin="anonymous"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/Chart.js/2.9.4/Chart.js"></script>

<script type="text/javascript" src="https://cdn.jsdelivr.net/npm/chart.js"></script>

<!-- Read CSV TO HTML TABLE -->

<div class="back-button" style="margin-bottom:20px">
    <a class="notificationback-link btn btn-outline-success p-2 mt-5" href="ReportsPage" type="button">Back</a>
    <a class="notificationback-link btn btn-outline-success p-2 mt-5" onClick="window.print()" style="width:20%">Print/Save File</a>
</div>

<!-- Plot Charts-->
<center style="padding:30px">
    <button class="btn btn-outline-success"
            onclick="plotcharts()">
        Plot Charts
    </button>
</center>

<div class="chartMenu">
    <p>SUMMARY OF NET PROFIT: DESCRIPTIVE ANALYSIS</p>
</div>
<!-- Visual Charts-->
<div class="chartCard">
    <div class="chartBox">
        <div>Bar Graph: UNIT SOLD PER PRODUCT</div>
        <canvas id="barchart"></canvas>
    </div>
</div>

<div class="chartCard">
    <div class="chartBox">
        <div>Line Graph: PROFIT GENERATED PER PRODUCT</div>
        <canvas id="linechart"></canvas>
    </div>
</div>
<div class="chartCard">
    <div class="chartBox2">
        <div>Table: Data Interpretation</div>
    </div>
</div>


<script type="text/javascript">
    function plotcharts() {
        var apiUrl = 'https://sheetdb.io/api/v1/aj192y30cg6kr';
        var product = []
        var unit = [];
        var gross = [];
        var net = [];
        var bgcolor = [
                'rgba(255, 26, 104, 0.2)',
                'rgba(54, 162, 235, 0.2)',
                'rgba(255, 206, 86, 0.2)',
                'rgba(75, 192, 192, 0.2)',
                'rgba(153, 102, 255, 0.2)',
                'rgba(255, 159, 64, 0.2)',
                'rgba(0, 0, 0, 0.2)'
        ];

        var bordercolor = [
            'rgba(255, 26, 104, 1)',
            'rgba(54, 162, 235, 1)',
            'rgba(255, 206, 86, 1)',
            'rgba(75, 192, 192, 1)',
            'rgba(153, 102, 255, 1)',
            'rgba(255, 159, 64, 1)',
            'rgba(0, 0, 0, 1)'
        ];



        fetch(apiUrl).then(response => {
            return response.json();
        }).then(data => {
            for (let i = 0; i < data.length; i++) {
                product.push(data[i]['Product']);
                unit.push(parseInt(data[i]['Unit Sold']));
                gross.push(data[i]['Gross Sales']);
                net.push(data[i]['Net Profit']);
            }



            //For Bar chart
            dataset = addData2('Unit Sold', unit, bgcolor, bordercolor);
            drawchart2(dataset, product, 'bar');

            //For Line chart
            dataset = addData('Unit Sold', unit, bgcolor, bordercolor, 'Gross Sales', gross, bgcolor, bordercolor, 'Net Profit', net, bgcolor, bordercolor)
            drawchart(dataset, product, 'line');

        }).catch(err => {
            console.log(err);
        });

    }
    function addData(title, Data, bgcolor, bordercolor, title2, Data2, bgcolor2, bordercolor2, title3, Data3, bgcolor3, bordercolor3) {
        return [{
            label: title,
            data: Data,
            backgroundColor: bgcolor,
            borderColor: bordercolor,
            borderWidth: 1.5
        },
        {
            label: title2,
            data: Data2,
            backgroundColor: bgcolor2,
            borderColor: bordercolor2,
            borderWidth: 1.5
        },
        {
            label: title3,
            data: Data3,
            backgroundColor: bgcolor3,
            borderColor: bordercolor3,
            borderWidth: 1.5
        }];
    }

    function drawchart(dataset, Labels, type) {
        const ctx = document.getElementById(type + 'chart').getContext('2d');
        const myChart = new Chart(ctx, {
            type: type,
            data: {
                labels: Labels,
                datasets: dataset
            },
            options: {
                scales: {
                    yAxes: [{
                        ticks: {
                            beginAtZero: true
                        }
                    }]
                }
            }
        });
    }

    function addData2(title, Data, bgcolor, bordercolor, title2, Data2, bgcolor2, bordercolor2) {
        return [{
            label: title,
            data: Data,
            backgroundColor: bgcolor,
            borderColor: bordercolor,
            borderWidth: 1.5,
        }];
    }

    function drawchart2(dataset, Labels, type) {
        const ctx = document.getElementById(type + 'chart').getContext('2d');
        const myChart = new Chart(ctx, {
            type: type,
            data: {
                labels: Labels,
                datasets: dataset
            },
            options: {
                indexAxis: 'y',
                scales: {
                    y: {
                        beginAtZero: true
                    }
                }
            }
        });
    }

     //LINE CHART ---------------------------------------------------------------------------------------------------------------------------------
    // render line chart
    const profit = {
        labels: ['Product 1', 'Product 2', 'Product 3', 'Product 4', 'Product 5', 'Product 6', 'Product 7', 'Product 8', 'Product 9', 'Product 10'],
        datasets: [{
            label: 'Unit Sold',
            data: [12110, 112002, 651120, 1230120, 980120, 120120, 120120, 811200, 980212, 140120],
            backgroundColor: [
                'orange', // legend color
            ],
            borderColor: [
                'orange', // line color
            ],
            borderWidth: 1
        },
        {
            label: 'Gross Sales',
            data: [121070, 11700, 651730, 1271200, 917800, 117200, 127200, 811700, 971202, 171200],
            backgroundColor: [
                'gray', // legend color
            ],
            borderColor: [
                'gray', // line color
            ],
            borderWidth: 1
        },
        {
            label: 'Net Profit',
            data: [18120, 1212111, 601200, 912001, 121212, 351200, 90120, 100011, 12312, 12312],
            backgroundColor: [
                'rgb(0, 38, 153)', // legend color
            ],
            borderColor: [
                'rgb(0, 38, 153)', // line color
            ],
            borderWidth: 1
        }]
    };


    // config
    const config2 = {
        type: 'line',
        data: profit,
        options: {
            scales: {
                y: {
                    beginAtZero: true
                }
            }
        }
    };
    const lineChart = new Chart(
        document.getElementById('lineChart'),
        config2
    );

    function createTable() {
        console.log('triggered');
        const chartBox = document.querySelector('.chartBox2');
        const tableDiv = document.createElement('DIV');
        tableDiv.setAttribute('id', 'tableDiv');//assign ID

        //add Table
        const table = document.createElement('TABLE');
        table.classList.add('chartjs-table');

        //add thead
        const thead = table.createTHead();
        thead.classList.add('chartjs-thead');

        //add Column Headers using data
        thead.insertRow(0);
        console.log(profit.labels)
        for (let i = 0; i < profit.labels.length; i++) {
            thead.rows[0].insertCell(i).innerText = profit.labels[i];
            thead.rows[0].cells[i].style.color = 'orange';
        };
        thead.rows[0].insertCell(0).innerText = 'Metrics';

        //tbody
        const tbody = table.createTBody();
        tbody.classList.add('chartjs-tbody');

        //data
        console.log(profit.datasets)
        profit.datasets.map((dataset, index) => {
            tbody.insertRow(index);
            for (let i = 0; i < profit.datasets[0].data.length; i++) {
                tbody.rows[index].insertCell(i).innerText = dataset.data[i];
            };
            tbody.rows[index].insertCell(0).innerText = dataset.label;
        })


        //append
        chartBox.appendChild(tableDiv);
        tableDiv.appendChild(table);
    };

    createTable();
</script>

<script>
    function printFunction() {
        window.print();
    }
</script>